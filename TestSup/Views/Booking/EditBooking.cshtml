@model Logic.Bookings

@{
    ViewBag.Title = "Ändra bokning";
}

<h2>Ändra bokning</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2", @onclick = "hide()" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @onclick = "hide()" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @onclick = "hide()" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserMobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserMobile, new { htmlAttributes = new { @class = "form-control", @onclick = "hide()" } })
            @Html.ValidationMessageFor(model => model.UserMobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @onclick = "hide()" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.Date.ToShortDateString(), @required = "required", @onclick = "hide()", @id = "date" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label>Tidigare starttid: @Model.StartTime</label>
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "startTime", @style = "display: none;" } })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Endtime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label>Tidigare sluttid: @Model.Endtime</label>
            @Html.EditorFor(model => model.Endtime, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "endTime", @style = "display: none;" } })
            @Html.ValidationMessageFor(model => model.Endtime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Välj tid", htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            <select onclick="getTime(), hide()" class="form-control" id="cbTime">
                <option selected disabled>Välj tid</option>
                <option type="button" class="btn" id="time-btn" value="08.00 - 09.00"> 08.00 - 09.00 </option>
                <option type="button" class="btn" id="time-btn" value="09.00 - 10.00"> 09.00 - 10.00 </option>
                <option type="button" class="btn" id="time-btn" value="10.00 - 11.00"> 10.00 - 11.00 </option>
                <option type="button" class="btn" id="time-btn" value="11.00 - 12.00"> 11.00 - 12.00 </option>
                <option type="button" class="btn" id="time-btn" value="12.00 - 13.00"> 12.00 - 13.00 </option>
                <option type="button" class="btn" id="time-btn" value="13.00 - 14.00"> 13.00 - 14.00 </option>
                <option type="button" class="btn" id="time-btn" value="14.00 - 15.00"> 14.00 - 15.00 </option>
                <option type="button" class="btn" id="time-btn" value="15.00 - 16.00"> 15.00 - 16.00 </option>
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" id="updateBtn" value="Uppdatera" class="btn btn-info" onclick="getBookings()" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="hidden" value="Spara de nya ändringarna" class="btn btn-info" style="display: none;"/>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" onclick="location.href= '@Url.Action("BookingList", "Booking")'" class="btn btn-primary btn-sm"> Tillbaka till alla bokningar </button>
        </div>
    </div>
</div>
}

<script>
    function getTime() {
        var timeText = document.getElementById("cbTime").value;
        var getStartTime = timeText.slice(0, 5);
        var getEndTime = timeText.slice(8, 13);
        document.getElementById("startTime").value = getStartTime;
        document.getElementById("endTime").value = getEndTime;
    }
</script>

<script>
    function update() {
        var hiddenButton = document.getElementById("hidden");
        hiddenButton.style.display = "block";
    }

    function hide() {
        var hiddenButton = document.getElementById("hidden");
        hiddenButton.style.display = "none";

    }
</script>

<script>
    function getBookings() {
        var startTime = $('#startTime').val();
        var id = @Model.BookingSystem.Id;
        var date = $('#date').val();
        $.ajax({
            url: "http://localhost:64034/api/getAllCreateBookings?startTime=" + startTime + "&id=" + id + "&date=" + date,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var json = JSON.stringify(data);
                if (json == "[]") {
                    update();
                }
                else {
                    alert("Denna tid är tyvärr redan bokad.");
                }
            },
        });
    }
</script>
