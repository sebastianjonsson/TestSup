@model TestSup.Models.BookingViewModel

@{
    ViewBag.Title = "Create";
}

<!DOCTYPE html>
<meta charset="utf-8" />
<link href="/Content/Site.css" rel="stylesheet" />

<h2>Boka</h2>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "userName" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserMobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserMobile, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "userMobile" } })
                @Html.ValidationMessageFor(model => model.UserMobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "subject" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Välj tid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select onclick="getTime()" class="form-control" id="cbTime">
                    <option type="button" class="btn" id="time-btn" value="08.00 - 09.00"> 08.00 - 09.00 </option>
                    <option type="button" class="btn" id="time-btn" value="09.00 - 10.00"> 09.00 - 10.00 </option>
                    <option type="button" class="btn" id="time-btn" value="10.00 - 11.00"> 10.00 - 11.00 </option>
                    <option type="button" class="btn" id="time-btn" value="11.00 - 12.00"> 11.00 - 12.00 </option>
                    <option type="button" class="btn" id="time-btn" value="12.00 - 13.00"> 12.00 - 13.00 </option>
                </select>
            </div>
        </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "startTime" } })
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Endtime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Endtime, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "endTime" } })
                        @Html.ValidationMessageFor(model => model.Endtime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required", @id = "date" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Boka" class="btn btn-info" onclick="book()" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input href="javascript:void(0);" onclick="history.go(-1);" type="button" value="Tillbaka till verksamheten" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>

<div class="modal" tabindex="-1" role="dialog" id="modal-badboy">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> Rekommenderade!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Din bokning är nu genomförd och om du är intresserad kommer här några tips:</p>
                @{
                    ViewBag.Title = "CreateBooking";
                    var id = ViewBag.ID;
                }
                <h3>Rekommenderade:</h3>
                @Html.Partial("../BookingSystems/RecommendedBookingSystem", new TestSup.Controllers.RecommendedBookingSystem(id))
            </div>
            <div class="modal-footer">
                <button onclick="location.href= '@Url.Action("BookingList", "Booking")'" class="btn btn-primary btn-sm"> Inte intresserad </button>
            </div>
        </div>
    </div>
</div>

<script>
    function getTime() {
        var timeText = document.getElementById("cbTime").value;
        var getStartTime = timeText.slice(0, 5);
        var getEndTime = timeText.slice(8, 13);
        document.getElementById("startTime").value = getStartTime;
        document.getElementById("endTime").value = getEndTime;
    }
</script>

<script type="text/javascript">

        function book() {
        var userName = $('#userName').val().length;
        var email = $('#email').val().length;
        var userMobile = $('#userMobile').val().length;
        var subject = $('#subject').val().length;
        var startTime = $('#startTime').val().length;
        var endTime = $('#endTime').val().length;

        if (userName > 0 && email > 0 && userMobile > 0 && subject > 0 && startTime > 0 && endTime > 0) {

            var userName = $('#userName').val();
            var email = $('#email').val();
            var userMobile = $('#userMobile').val();
            var subject = $('#subject').val();
            var startTime = $('#startTime').val();
            var endTime = $('#endTime').val();
            var date = $('#date').val();
            var id = '@ViewBag.ID';
            var booking = {
                UserName: userName,
                Email: email,
                UserMobile: userMobile,
                Subject: subject,
                StartTime: startTime,
                EndTime: endTime,
                BookingSystem: id,
                Date: date
            };
            $.ajax({
                type: 'POST',
                url: "http://localhost:64034/api/addBooking/",
                contentType: 'application/json',
                data: JSON.stringify(booking),
                success: function (result) {
                    $('#modal-badboy').modal('show');
                }
            });
        }
        else {
            alert("Du måste fylla i alla fält!")
        }
    }
</script>



