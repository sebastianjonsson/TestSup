@model TestSup.Controllers.RecommendedBookingSystem

@{
    ViewBag.Title = "RecBookingSys";
}
<h5>Välj avstånd för rekommenderade bokningssystem:</h5>

<div>
    <p>Avstånd: <span id="showSliderValue"></span></p>
    <input type="range" min="250" max="5000" value="2500" onchange="initMap()" id="slider" />
</div>

<p style="display:inline;">Sortera efter kategori: </p>
<select onclick="initMap()" id="cbCategory">
    <option value="Alla" selected>Alla förutom @Model.Category</option>
    @if (Model.Category == "Verkstad")
    {
        <option value="Verkstad" style="display:none;">Verkstad</option>
    }
    else
    {
        <option value="Verkstad">Verkstad</option>
    }
    @if (Model.Category == "Behandling")
    {
        <option value="Behandling" style="display:none;">Behandling</option>
    }
    else
    {
        <option value="Behandling">Behandling</option>
    }
    @if (Model.Category == "Idrott")
    {
        <option value="Idrott" style="display:none;">Idrott</option>
    }
    else
    {
        <option value="Idrott">Idrott</option>
    }
    @if (Model.Category == "Restaurang")
    {
        <option value="Restaurang" style="display:none;">Restaurang</option>
    }
    else
    {
        <option value="Restaurang">Restaurang</option>
    }
</select>

<div id="map" style="width: 100%; height: 380px;"></div>
<div style="height:280px;overflow:auto;">
    <table id="recommendedBookingSystemTable" class="table" border="1">
        <tr>
        </tr>
    </table>
</div>


<script>
    function initMap() {
        var place = { lat: @Model.Lat, lng: @Model.Long };
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 11, center: place });
                    var contentStringBooking = 'Här ligger din bokning';
                    var infowindowBooking = new google.maps.InfoWindow({
                      content: contentStringBooking
                    });
                   var markerBooking = new google.maps.Marker({
                    position: place,
                       map: map,
                    title: 'Här ligger din bokning.',
                    icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                   });
                    markerBooking.addListener('click', function() {
                      infowindowBooking.open(map, markerBooking);
                    });

        var infowindow = new google.maps.InfoWindow();

        $('#recommendedBookingSystemTable').empty();

        var sliderValue = document.getElementById("slider");
        var kmSlider = sliderValue.value * 1;
        var sliderValueInKm = sliderValue.value / 1000;

        var showSliderValue = document.getElementById("showSliderValue");
        showSliderValue.innerHTML = sliderValueInKm.toFixed(2) + " km";

        var radius = new google.maps.Circle({
            center: place,
            radius: kmSlider,
            strokeColor: "#0000FF",
            strokeOpacity: 0.8,
            strokeWeight: 1,
            fillColor: "#CACACA",
            fillOpacity: 0.3,
            map: map
        });
        var directionsDisplay = new google.maps.DirectionsRenderer({suppressMarkers: true});

        var activeBookingSystem = new google.maps.LatLng(@Model.Lat, @Model.Long);
     @foreach(var item in Model.BookingSystem)
     {
     <text>
        var choosenCategory = document.getElementById("cbCategory").value;
        var recommendedBookingSystems = new google.maps.LatLng(@item.Latitude, @item.Longitude);
        var distance = google.maps.geometry.spherical.computeDistanceBetween(activeBookingSystem, recommendedBookingSystems);
        var distanceInKm = distance / 1000;
        var contentString = '<div>@Html.ActionLink(item.SystemName, "DetailsBookingSystem", "BookingSystems", new { id = item.Id }, null)</div><div>@item.Address</div><div>Fågelväg: ' + distanceInKm.toFixed(2) + ' km</div>';
        var category = '@item.CreateBookingSystemCategory';
        if (distance < kmSlider && choosenCategory == "Alla") {
            $('#recommendedBookingSystemTable').append(contentString + "<hr />");
             var marker = new google.maps.Marker({
                map: map,
                position: { lat: @item.Latitude, lng: @item.Longitude },
            });
            google.maps.event.addListener(marker, 'click', (function (marker, contentString, infowindow) {
                return function () {
                    infowindow.open(map, marker);
                    var directionsService = new google.maps.DirectionsService;
                    directionsDisplay.setMap(map);
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                        directionsService.route({
                          origin: { lat: @Model.Lat, lng: @Model.Long },
                          destination: { lat: @item.Latitude, lng: @item.Longitude },
                          travelMode: 'WALKING'
                        }, function (response, status) {
                            var walkDistance = response.routes[0].legs[0].distance.value / 1000;
                            if (status === 'OK') {
                                infowindow.setContent(contentString + "Gångavstånd: " + walkDistance.toFixed(2) + " km");
                                directionsDisplay.setDirections(response);
                          } else {
                            window.alert('Directions request failed due to ' + status);
                          }
                        });
                    }
                };

             })(marker, contentString, infowindow));
        }
        else if (distance < kmSlider && category == choosenCategory)
        {
            $('#recommendedBookingSystemTable').append(contentString + "<hr />");
            var marker = new google.maps.Marker({
                map: map,
                position: { lat: @item.Latitude, lng: @item.Longitude },
            });

            google.maps.event.addListener(marker, 'click', (function (marker, contentString, infowindow) {
                return function () {
                    infowindow.setContent(contentString);
                    infowindow.open(map, marker);
                    var directionsService = new google.maps.DirectionsService;
                    directionsDisplay.setMap(map);
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                        directionsService.route({
                          origin: { lat: @Model.Lat, lng: @Model.Long },
                          destination: { lat: @item.Latitude, lng: @item.Longitude },
                          travelMode: 'WALKING'
                        }, function (response, status) {
                            var walkDistance = response.routes[0].legs[0].distance.value / 1000;
                            if (status === 'OK') {
                                infowindow.setContent(contentString + "Gångavstånd: " + walkDistance.toFixed(2) + " km");
                                directionsDisplay.setDirections(response);
                          } else {
                            window.alert('Directions request failed due to ' + status);
                          }
                        });
                    }
                };

             })(marker, contentString, infowindow));
        }
        
     </text>
    }
    }
</script>


